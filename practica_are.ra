--Realizado por Estíbaliz Busto y Lucía Latorre

/abolish
create table programadores(dni string primary key, nombre string, dirección string, teléfono string);
insert into programadores values('1','Jacinto','Jazmín 4','91-8888888'); 
insert into programadores values('2','Herminia','Rosa 4','91-7777777');
insert into programadores values('3','Calixto','Clavel 3','91-1231231');
insert into programadores values('4','Teodora','Petunia 3','91-6666666');
create table analistas (dni string primary key, nombre string, dirección string, teléfono string);
insert into analistas values('4','Teodora','Petunia 3','91-6666666');
insert into analistas values('5','Evaristo','Luna 1','91-1111111');
insert into analistas values('6','Luciana','Júpiter 2','91-8888888');
insert into analistas values('7','Nicodemo','Plutón 3', NULL);
create table distribución (códigopr string, dniemp string primary key, horas int, primary key (códigopr, dniemp));
insert into distribución(códigopr, dniemp, horas) values('P1','1',10);
insert into distribución(códigopr, dniemp, horas) values('P1','2',40);
insert into distribución(códigopr, dniemp, horas) values('P1','4',5);
insert into distribución(códigopr, dniemp, horas) values('P2','4',10);
insert into distribución(códigopr, dniemp, horas) values('P3','1',10);
insert into distribución(códigopr, dniemp, horas) values('P3','3',40);
insert into distribución(códigopr, dniemp, horas) values('P3','4',5);
insert into distribución(códigopr, dniemp, horas) values('P3','5',30);
insert into distribución(códigopr, dniemp, horas) values('P4','4',20);
insert into distribución(códigopr, dniemp, horas) values('P4','5',10);
create table proyectos (código string primary key, descripción string, dnidir string);
insert into proyectos(código, descripción, dnidir) values('P1','Nómina','4');
insert into proyectos(código, descripción, dnidir) values('P2','Contabilidad','4');
insert into proyectos(código, descripción, dnidir) values('P3','Producción','5');
insert into proyectos(código, descripción, dnidir) values('P4','Clientes','5');
insert into proyectos(código, descripción, dnidir) values('P5','Ventas','6');

-------------------------------Practica 2------------------
--1. Usando la reunión natural, determinar el DNI de los empleados que son a la vez programadores y analistas.
vista1(dni) := project dni(programadores njoin analistas);

--2. Determinar el número de horas totales que trabaja cada empleado. Si alguno no está asignado a ningún proyecto, su total de horas será 0.
horas_emp(dni, horas) := group_by dniemp dniemp,sum(horas) true (distribución);

emp_0_horas:= project dni(programadores union analistas) difference project dni (horas_emp);

vista2:= horas_emp union (emp_0_horas product project 0 (dual));

--3. Proporcionar un listado en el que aparezca el DNI de cada uno de los empleados (no debe faltar ninguno), su nombre y el código de proyecto al que está asignado.  Esquema: vista3(dni, nombre, proyecto). 
vista3(dni, nombre, proyecto):= project dni, nombre, códigopr((programadores union analistas) ljoin dni=dniemp (distribución));


--4. Determinar el DNI y nombre de los empleados que no tienen teléfono usando el operador infijo is y la constante null (Expresión is null). Esquema: vista4(dni, nombre). 
vista4(dni, nombre):= project dni, nombre(select teléfono is null (programadores union analistas));

--5.Determinar los empleados cuyo total de horas dividido entre el número de proyectos en que trabaja es menor que la media del total de horas por proyecto dividido entre su número de empleados. No es necesario preocuparse de los proyectos en que Evaristo actúe como director porque siempre se encontrará una tupla relacionada en la misma relación distribución en la que Evaristo aparezca como empleado. Esquema: vista5(dni, número). 
total_horas_emp(dni, horasEmpleados) := group_by dniemp dniemp, avg(horas) true (distribución);

total_horas_proy(códigopr, horasProyectos):= group_by códigopr códigopr, avg(horas) true (distribución);

media_del_total(horasProyectos):= group_by [] avg(horasProyectos) true(total_horas_proy);

vista5(dni, numero):= project dni, horasEmpleados(select horasEmpleados < horasProyectos(total_horas_emp product media_del_total));

--6.Listar el número de horas por proyecto ampliadas en un 20% solo de los empleados que no trabajen con Evaristo (i.e., que no estén asignados a ningún proyecto en el que esté asignado Evaristo).  Esquema: vista6(dni, códigopr, horas). 

Evaristo_dni:= project dni(select nombre = 'Evaristo' (programadores union analistas));

proyectos_de_Evaristo:= project dnidir, código (select dnidir = dni(proyectos product Evaristo_dni));

con_Evaristo:= project dniemp(select códigopr = código(distribución product proyectos_de_Evaristo));

dni_empleados:= project dni(programadores union analistas);

dni_emp_sin_Evaristo:= dni_empleados difference con_Evaristo;

vista6(dni, códigopr, horas):= project dni, códigopr, horas*1.2(select dniemp=dni(distribución product dni_emp_sin_Evaristo));

--7.Usando la división, determinar el DNI de los empleados que trabajan en al menos los mismos proyectos que Evaristo. Evaristo no debe aparecer en el resultado.

proyectos_Evaristo:= project códigopr (select dniemp = dni(distribución product Evaristo_dni));

distribución_sin_horas:= project códigopr, dniemp (distribución);

vista7(dni):= project dniemp(distribución_sin_horas division proyectos_Evaristo) difference Evaristo_dni;

--8. Resolver el apartado anterior sin usar la operación de división.

empleados_proyectos:= project dniemp(distribución_sin_horas);

proyectos_restantes:= proyectos_Evaristo product empleados_proyectos;

dni_emp:= project dniemp(proyectos_restantes difference distribución_sin_horas);

vista8(dni):= empleados_proyectos difference dni_emp difference Evaristo_dni; 

--9. Algunos proyectos están dirigidos por empleados asignados a otros proyectos, por lo que existe una dependencia entre proyectos. Determinar los dni de los empleados que dependen de Evaristo (los asignados a los proyectos que dirige y los que dependen a su vez de estos).  

sin_Evaristo:= con_Evaristo difference Evaristo_dni;

depende:= project código(select dnidir=dniemp(proyectos product sin_Evaristo));

dep:= project dniemp(select códigopr = código(distribución product depende));

vista9(dni):= con_Evaristo union dep;

select true (vista1); 
select true (vista2); 
select true (vista3); 
select true (vista4); 
select true (vista5); 
select true (vista6); 
select true (vista7);
select true (vista8);
select true (vista9);
